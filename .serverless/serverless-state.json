{
  "service": {
    "service": "galeria",
    "serviceObject": {
      "name": "galeria"
    },
    "provider": {
      "stage": "prod",
      "variableSyntax": "\\${([^{}]+?)}",
      "name": "aws",
      "runtime": "nodejs12.x",
      "region": "eu-central-1",
      "environment": {
        "DEST_BUCKET": "actiprofs/originals",
        "NODE_PATH": "./:/opt/node_modules"
      },
      "role": "arn:aws:iam::170048452532:role/serverless",
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "UploadAvatarImageLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/galeria-prod-uploadAvatarImage"
            }
          },
          "AuthorizerFuncLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/galeria-prod-authorizerFunc"
            }
          },
          "UploadAvatarImageLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/galeria/prod/1586936895701-2020-04-15T07:48:15.701Z/galeria.zip"
              },
              "FunctionName": "galeria-prod-uploadAvatarImage",
              "Handler": "./uploader/handler.uploadAvatarImage",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::170048452532:role/serverless",
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DEST_BUCKET": "actiprofs/originals",
                  "NODE_PATH": "./:/opt/node_modules"
                }
              }
            },
            "DependsOn": [
              "UploadAvatarImageLogGroup"
            ]
          },
          "UploadAvatarImageLambdaVersion30TXZBtCLDG7DXiOB7xH4HF64k5ACuxPQZUiX2EDk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UploadAvatarImageLambdaFunction"
              },
              "CodeSha256": "S00vL4LvDEkRAG7yni+Nlez2xT8scpvkBH/MlUPTzrY="
            }
          },
          "AuthorizerFuncLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/galeria/prod/1586936895701-2020-04-15T07:48:15.701Z/galeria.zip"
              },
              "FunctionName": "galeria-prod-authorizerFunc",
              "Handler": "./authorizer/handler.authorizerFunc",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::170048452532:role/serverless",
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DEST_BUCKET": "actiprofs/originals",
                  "NODE_PATH": "./:/opt/node_modules"
                }
              },
              "Layers": [
                "arn:aws:lambda:eu-central-1:170048452532:layer:firebase:4"
              ]
            },
            "DependsOn": [
              "AuthorizerFuncLogGroup"
            ]
          },
          "AuthorizerFuncLambdaVersionuSPhbEV3esgGZ5G1LDIRxSeXoQ014ngZCNFBDvY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AuthorizerFuncLambdaFunction"
              },
              "CodeSha256": "S00vL4LvDEkRAG7yni+Nlez2xT8scpvkBH/MlUPTzrY="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "prod-galeria",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceAvatar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "avatar",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAvatarOriginal": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAvatar"
              },
              "PathPart": "original",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAvatarOriginalPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAvatarOriginal"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "AuthorizerFuncApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UploadAvatarImageLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "AuthorizerFuncApiGatewayAuthorizer"
          },
          "AuthorizerFuncApiGatewayAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
              "IdentitySource": "method.request.header.Authorization",
              "Name": "authorizerFunc",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "AuthorizerUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "AuthorizerFuncLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              },
              "Type": "TOKEN"
            }
          },
          "ApiGatewayDeployment1586936877320": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "prod"
            },
            "DependsOn": [
              "ApiGatewayMethodAvatarOriginalPost"
            ]
          },
          "UploadAvatarImageLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UploadAvatarImageLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AuthorizerFuncLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AuthorizerFuncLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "UploadAvatarImageLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UploadAvatarImageLambdaVersion30TXZBtCLDG7DXiOB7xH4HF64k5ACuxPQZUiX2EDk"
            }
          },
          "AuthorizerFuncLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AuthorizerFuncLambdaVersionuSPhbEV3esgGZ5G1LDIRxSeXoQ014ngZCNFBDvY"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/prod"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "uploadAvatarImage": {
        "handler": "./uploader/handler.uploadAvatarImage",
        "events": [
          {
            "http": {
              "path": "avatar/original",
              "method": "post",
              "authorizer": {
                "name": "authorizerFunc",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AuthorizerFuncLambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "identitySource": "method.request.header.Authorization"
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "galeria-prod-uploadAvatarImage",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "UploadAvatarImageLambdaVersion30TXZBtCLDG7DXiOB7xH4HF64k5ACuxPQZUiX2EDk"
      },
      "authorizerFunc": {
        "handler": "./authorizer/handler.authorizerFunc",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AuthorizerFuncLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "events": [],
        "name": "galeria-prod-authorizerFunc",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "AuthorizerFuncLambdaVersionuSPhbEV3esgGZ5G1LDIRxSeXoQ014ngZCNFBDvY"
      }
    },
    "serviceFilename": "serverless.yml",
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "C:\\Users\\Ilja\\workspace\\sandbox\\actiprofs-services\\serverless-galleria\\.serverless\\galeria.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/galeria/prod/1586936895701-2020-04-15T07:48:15.701Z",
    "artifact": "galeria.zip"
  }
}